@page "/bar-chart"

@using System.Linq

<nav class="navbar navbar-light px-5 rounded-3 justify-content-between mb-5">
    <h1 class="navbar-brand mb-0 h1"><b>Bar Graph of Each Items Taken Out</b></h1>
</nav>

@*The following are the components from Mudblazor*@
<MudChart ChartType="ChartType.Bar" ChartSeries="@Series" XAxisLabels="@XAxisLabels" Width="100%" Height="350px">
    <CustomGraphics>
        <style>
            .heavy {
                font: bold 30px Helvetica;
            }

            .Rrrrr {
                font: italic 40px Helvetica;
                fill: rgb(62,44,221);
            }
        </style>
        
        @*Y-axis labels*@
        <text x="-60" y="185" class="light">🠕</text>
        <text x="-80" y="205" class="light">Number</text>
        <text x="-80" y="225" class="light">Taken Out</text>
    </CustomGraphics>
</MudChart>

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private List<ItemRequest> _requestedItems { get; set; }
    public List<ChartSeries> Series { get; set; }
    public string[] XAxisLabels { get; set; }

    protected override void OnInitialized()
    {
        _requestedItems = InventoryService.GetAllRequestedItem();

        // Grouping the requested items based on ItemName then sum the quantity
        var groupedItems = _requestedItems
            .Where(item => item.ApprovalStatus == true)
            .GroupBy(item => item.ItemName)
            .Select(group => new
            {
                ItemName = group.Key,
                Quantity = group.Sum(item => item.Quantity)
            });
        Series = new List<ChartSeries>
        {
            new ChartSeries()
        {
            Name = "Item Name ➜", //X-axis label
            Data = groupedItems.Select(item => Convert.ToDouble(item.Quantity)).ToArray() //quantity datatype needed to be converted to double as "Data" only accepts double data type
}
        };
        XAxisLabels = groupedItems.Select(item => item.ItemName).ToArray();
    }
}





